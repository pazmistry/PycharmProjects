---
# db_details.yml
# Undertake basic db validation

- name: db_details 1. Execute sql script "{{ script_dir }}/db_details.sh  {{ oracle_sid.stdout }} "
  script:
    cmd: ./db_details.sh {{ oracle_sid.stdout }}
    chdir: "{{ script_dir }}"
  register: db_details
  failed_when: db_details.rc >= 1
  debugger: on_failed
  tags:
    - test
    - precheck

- name: db_details 2. set standby_oracle_sid
  set_fact:
    standby_oracle_sid: "{{ db_details.stdout.split(':')[1] }}"
  tags:
    - always
    - precheck

- name: db_details 3. set db_unique_name
  set_fact:
    db_unique_name: "{{  db_details.stdout.split(':')[2] }}"
  tags:
    - always
    - precheck

- name: db_details 4. set open_mode
  set_fact:
    open_mode: "{{  db_details.stdout.split(':')[3] }}"
  tags:
    - always
    - precheck
    -
- name: db_details 5. set database_role
  set_fact:
    database_role: "{{  db_details.stdout.split(':')[4] }}"
  tags:
    - always
    - precheck

- name: db_details 6. set switchover_status
  set_fact:
    switchover_status: "{{  db_details.stdout.split(':')[5] }}"
  tags:
    - always
    - precheck

- name: db_details 7. set restart_time_mins
  set_fact:
    restart_time_mins: "{{  db_details.stdout.split(':')[7] }}"
  tags:
    - always
    - precheck
    -
- name: db_details 8. display db_details
  debug:
    msg:
      - "{{ standby_oracle_sid }}"    #oracle_sid
      #- "{{  db_details.stdout.split(':')[2]  }}"   #db_unique_name
      - "{{ db_unique_name }}"
      - "{{ open_mode }}"   #open_mode
      #- "{{ db_details.stdout.split(':')[4]  }}"   #database_role
      - "{{ database_role }}" #PRIMARY/ PHYSICAL STANDBY
      #- "{{ db_details.stdout.split(':')[5]  }}"   #SWITCHOVER_STATUS
      - "{{ switchover_status }}"
      - "{{ db_details.stdout.split(':')[6]  }}"   #DATAGUARD_BROKER
      - "{{ restart_time_mins }}"
      - "{{ is_rac }}"        #yes/no
  tags:
    - test
    - precheck


- name: db_details 9. validate database_role "{{ database_role }}"
  fail: msg="ERROR - db state not standby - {{ database_role }} "
  when: "'PHYSICAL STANDBY' not in database_role"
  tags:
    - always
    - precheck

- name: db_details 10. validate db_unique_name "{{ db_unique_name }}"
  fail: msg="ERROR - db state not standby - {{ db_unique_name }} "
  when: "'ERROR' in db_unique_name"
  tags:
    - always
    - precheck

- name: db_details 11. validate open_mode "{{ db_details.stdout.split(':')[3] }}"
  fail: msg="ERROR - open_mode not valid - {{ db_details.stdout.split(':')[3] }} "
  when: "'ORA-' in open_mode"
  tags:
    - always
    - precheck
...
